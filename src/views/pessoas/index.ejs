<div class="row">
  <div class="col-8">
    <h1 class="mt-4">Pessoa</h1>
    <ol class="breadcrumb mb-4">
      <li class="breadcrumb-item"><a href="/">Início</a></li>
      <li class="breadcrumb-item active">Pessoa</li>
    </ol>
  </div>
  <div class="col-4 my-auto d-flex flex-row-reverse">
    <button type="button" class="btn btn-primary" onclick="showModal();">Nova pessoa</button>
  </div>
</div>
<div class="card mb-4">
  <table class="table" id="tablePessoas">
    <thead>
      <tr>
        <th style="width: 10%;" scope="col" class="text-center">#</th>
        <th scope="col">Nome e sobrenome</th>
        <th style="width: 1%;" scope="col" class="text-center">Handle</th>
      </tr>
    </thead>
    <tbody>
    </tbody>
    <tfoot>
      <tr>
        <th></th>
        <th></th>
        <td></td>
      </tr>
    </tfoot>
  </table>
</div>

<div class="modal fade" id="crud" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title"></h5>
      </div>
      <div class="modal-body mx-auto">
        <div class="spinner-border" role="status"></div>
      </div>
      <div class="modal-footer"></div>
    </div>
  </div>
</div>

<script type="text/javascript">

  import('/node_modules/@jstable/jstable/dist/jstable.min.js')
    .then(() => {
      const tableElement = document.querySelector(`#tablePessoas`);

      const headElement = document.querySelector(`head`),
        createdLinkElement = document.createElement('link');

      createdLinkElement.rel = 'stylesheet';
      createdLinkElement.href = '/node_modules/@jstable/jstable/dist/jstable.css';

      headElement.appendChild(createdLinkElement);

      const ajaxParams = {};

      const table = new JSTable(tableElement, {
        searchable: false,
        addQueryParams: false,
        ajaxParams,
        serverSide: true,
        ajax: `/pessoas/serverprocessing`,
        columns: [
          {
            select: 0,
            sortable: true,
            sort: "desc",
            render: (cell, idx) => `<div class="text-center">${cell.textContent}</div>`
          },
          {
            select: 2,
            sortable: false,
            searchable: false,
            dataset: 'text-center',
            render: (cell, idx) => `<div class="text-center"><a style="cursor: pointer" onclick="showModal(${cell.textContent});"><i class="fas fa-pencil"></i></a></div>`
          }
        ],
        labels: {
          placeholder: "Procure...",
          perPage: "Exibindo {select} registros por página",
          noRows: "Nenhum registro encontrado",
          info: "Exibindo {start} até {end} de {rows} registro(s)",
          loading: "Processando...",
          infoFiltered: "Exibindo {start} até {end} de {rows} registro(s) (filtrado de {rowsTotal} registros)"
        }
      });

      const divDTSearch = document.createElement('div');
      divDTSearch.className = 'dt-search';

      const inputDTSearch = document.createElement('input');
      inputDTSearch.className = 'dt-input';
      inputDTSearch.placeholder = 'Procure...';
      inputDTSearch.type = 'text';
      inputDTSearch.onkeyup = e => {
        e.preventDefault();
        if (e.keyCode == 13) {
          table.search(inputDTSearch.value);
        }
      };

      divDTSearch.appendChild(inputDTSearch);
      document.querySelector('.dt-wrapper .dt-top').appendChild(divDTSearch);

      tableElement.querySelectorAll('tfoot tr > *').forEach((element, i) => {
        if (element.tagName == 'TH') {
          const index = i + 1;
          const placeholder = tableElement.querySelector(`thead tr > *:nth-child(${index})`).textContent;
          const input = document.createElement('input');
          input.className = 'dt-input';
          input.placeholder = placeholder;
          input.type = 'text';
          input.onkeyup = e => {
            e.preventDefault();
            if (e.keyCode == 13) {
              
              ajaxParams[i] = input.value;
              table.update();
            }
          };
          input.style = 'width: 100%';
          element.appendChild(input);
        }
      });
    });

  function showModal(id) {
    const modalElement = document.getElementById('crud');

    if (id) {
      modalElement.loadModal(`/pessoas/inserireditar?id=${id}`);
    } else {
      modalElement.loadModal(`/pessoas/inserireditar`);
    }
  }
</script>