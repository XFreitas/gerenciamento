<style>
  table#tableRegistros tbody tr td:nth-child(3) {
    white-space: normal !important;
  }
</style>

<div class="modal-dialog modal-xl">
  <div class="modal-content">
    <div class="modal-header">
      <h5 class="modal-title">
        <button type="button" class="btn btn-primary btn-sm" onclick="document.getElementById('crud').loadModal()"><i class="fas fa-sync-alt"></i></button>
        Pagar duplicata
      </h5>
      <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
    </div>
    <%- formHelpers.formOpen(`/duplicatas/pagar`, 'post', {id: duplicata.id}, `id="formpagarduplicata"`) %>
    <div class="modal-body">
      <div class="mb-3">
        <table class="table">
          <tbody>
            <tr>
              <th class="text-end">Duplicata</th>
              <td><%- duplicata.id %></td>
              <th class="text-end">Data</th>
              <td><%- duplicata.formattedData %></td>
              <th class="text-end">Valor</th>
              <td>R$ <%- duplicata.valor %></td>
              <th class="text-end">Valor Pago</th>
              <td>R$ <%- duplicata.valorpago %></td>
            </tr>
            <tr>
              <th colspan="8" class="text-center">Soma dos registros selecionados: R$ <span id="spanSoma">0,00</span></th>
            </tr>
          </tbody>
        </table>
      </div>

      <div class="mb-3">
        <p><label>Selecionados</label></p>
        <div class="form-check form-check-inline">
          <input class="form-check-input" type="radio" name="selecionados" id="selecionados1" value="1" onclick="updateSelecionados(this.value);">
          <label class="form-check-label" for="selecionados1">Sim</label>
        </div>
        <div class="form-check form-check-inline">
          <input class="form-check-input" type="radio" checked name="selecionados" id="selecionados2" value="0" onclick="updateSelecionados(this.value);">
          <label class="form-check-label" for="selecionados2">Não</label>
        </div>
      </div>

      <div class="card mb-3">
        <table class="table" id="tableRegistros" data-conta="<%= duplicata.conta %>">
          <thead>
            <tr>
              <th style="width: 1%;" scope="col">#</th>
              <th style="width: 1%;" scope="col">Categoria</th>
              <th scope="col">Observação</th>
              <th style="width: 1%;" scope="col">Data</th>
              <th style="width: 1%;" scope="col">Valor</th>
            </tr>
          </thead>
          <tbody></tbody>
          <tfoot>
            <tr>
              <td></td>
              <th></th>
              <th></th>
              <th></th>
              <th></th>
            </tr>
          </tfoot>
        </table>
      </div>
    </div>
    <div class="modal-footer">
      <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Fechar</button>
      <button type="button" class="btn btn-success" onclick="submitForm();">Salvar</button>
    </div>
    <%- formHelpers.formClose() %>
  </div>

  <script type="text/javascript">
    {
      const modal = document.getElementById('crud');
      const form = modal.querySelector('form#formpagarduplicata');

      const tableElementRegistros = document.querySelector(`#tableRegistros`);

      function init() {
        console.clear();

        form.submitModal({
          success: function(response) {
            console.log(response);
            tableElement.JSTable.update();
          }
        });

        tableElementRegistros.serverProcessing({
          ajax: `/duplicatas/serverprocessingregistros`,
          ajaxParams: {
            conta: tableElementRegistros.dataset.conta,
            selecionado: 0,
          },
          columns: [{
              select: 0,
              sortable: false,
              render: (cell, idx) => {
                const data = cell.textContent.split('|');
                const id = data[1];
                const valor = data[0];

                const duplicata = data[2] ?? '';

                if(duplicata){
                  return `<button type="button" class="btn btn-danger btn-sm"><b>REMOVER</b></button>`;
                }


                return `<div class="text-center">` +
                  `<input type="checkbox" class="checkbox" name="registros[]" value="${id}"` +
                  ` onclick="checkboxClick(this);" data-valor="${valor}"` +
                  ` style="zoom: 1.8" />` +
                  `</div>`;
              }
            },
            {
              select: 4,
              render: (cell, idx) => {
                const aux = (cell.textContent.split('-'));
                return `<div class="float-end text-danger fw-bold">R$ ${aux[aux.length - 1]}</div>`;
              }
            }
          ]
        });


        tableElementRegistros.addEventListener("render", function() {
          Array.from(tableElementRegistros.querySelectorAll('tbody tr td:nth-child(3)')).forEach(function(cell) {
            /**
             * @type {HTMLElement}
             */
            const td = cell;

            const textContent = td.textContent;
            td.innerHTML = '';
            const tdWidth = (td.offsetWidth - 50);
            const div = document.createElement('div');
            div.textContent = textContent;
            div.style.width = tdWidth + 'px';
            div.title = textContent;
            div.className = 'text-truncate';
            td.appendChild(div);

            new bootstrap.Tooltip(div);
          });
        });
      }

      function submitForm() {
        form.dispatchEvent(new Event('submit'));
      }

      function checkboxClick(checkbox) {
        checkbox.closest('tr').className = (checkbox.checked ? 'selected' : '');

        const spanSoma = modal.querySelector('#spanSoma');

        spanSoma.textContent = nArredonda(
          Array
          .from(
            tableElementRegistros
            .querySelectorAll('tbody tr.selected input[type="checkbox"]')
          )
          .reduce((acc, cur) => (acc + nArredonda(cur.dataset.valor, 2)), 0), 2, true);

      }

      function updateSelecionados(value) {
        delete tableElementRegistros.JSTable.config.ajaxParams['selecionado'];

        if (value) {
          tableElementRegistros.JSTable.config.ajaxParams['selecionado'] = value;
        }

        tableElementRegistros.JSTable.isSearching = true;
        tableElementRegistros.JSTable.update();
      }

      setTimeout(() => init(), 250);
    }
  </script>